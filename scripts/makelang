#!/usr/bin/env bash

############################
#  Ã‰tienne "maiste" Marais #
# Languages install script #
#    Version 20210325      #
############################

cd "$(dirname $0)/.."

printf "\n\n"
printf "+---------------------------+\n"
printf "|  Languages configuration  |\n"
printf "+---------------------------+\n\n"

printf "ROOT DIRECTORY: %s\n" $PWD



#-------------- Languages ------------#

printf "\n#----- Install languages -----#\n"

get_language () {
  printf "\n - Try to install %s\n" $1
  which $2 > /dev/null
  if [[ $? -eq 1 ]] ; then
    printf " - Install %s\n" $2
    get_$1
  else
    printf " - Skip: %s already in the system\n" $1
  fi
}

get_python () {
  printf " - Python:\n"
  which pip3 > /dev/null
  if [[ $? -eq 1 ]] ; then
    printf "   - Exit: pip not install\n"
  else
    printf "  - Upgrade pip3\n"
    pip3 install --user --upgrade pip
    PIP_PKGS="
      python-language-server \
      pynvim
    "
    printf "  - Install %s\n" $PIP_PKGS
    pip3 install --user $PIP_PKGS
  fi
}

get_node () {
  printf "\n - Node:\n"
  printf "   - Installing nvm\n"
  which curl > /dev/null
  if [[ $? -eq 1 ]] ; then
    printf "  - Exit: curl not found\n"
    exit 1
  else
    curl https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash
    export NVM_DIR="$HOME/.nvm"
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
    [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
  fi
  nvm install --lts
  npm install -g @elm-tooling/elm-language-server
}

get_java () {
  printf "   - Install sdkman\n"
  which curl > /dev/null
  if [[ $? -eq 1 ]] ; then
    printf "  - Exit: curl not found\n"
    exit 1
  else
    curl -s "https://get.sdkman.io" | bash
    source "$HOME/.sdkman/bin/sdkman-init.sh"
    sdk install java 11.0.2-open
  fi
}

get_scala () {
  printf "   - Install sbt\n"
  sdk install sbt
  printf "   - Install scala\n"
  sdk install scala
}

get_rust () {
  printf "  - Install rustup and rls\n"
  which curl > /dev/null
  if [[ $? -eq 1 ]] ; then
    printf "  - Exit: curl not found\n"
    exit 1
  else
    curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
    source $HOME/.cargo/env
    rustup update
    rustup component add rls rust-analysis rust-src
  fi
}

get_ocaml () {
  printf "  - Install opam\n"
  which curl > /dev/null
  if [[ $? -eq 1 ]] ; then
    printf "  - Exit: curl not found\n"
    exit 1
  else
    sh <(curl -sL https://raw.githubusercontent.com/ocaml/opam/master/shell/install.sh)
    opam init
    opam update -y
    opam install -y merlin dune menhir odoc ocaml-lsp-server
  fi
}

get_python # Special because used as scripts
get_language "node" "npm"
get_language "ocaml" "opam"
get_language "java" "javac"
get_language "scala" "scalac"
get_language "rust"  "rustup"




#-------------- Editors ------------#

printf "\n#----- Install languages -----#\n"
printf " - Install neovim plugins\n"
nvim -c "PlugInstall | q | q"
